# shellcheck shell=sh

# Show message (ok or error) with symbol (✓, x respectively) based on status code, unless QUIET is set and exit
#
rc=$?

####################################### ✓|x die: QUIET (default: unset)
# Show message (ok or error) with symbol (✓, x respectively) based on status code, unless QUIET is set and exit
# Globals:
#   Green              Green color for ✓ symbol.
#   QUIET              Do not show message if set (default: unset).
#   Red                Red color for error message and x symbol.
#   Reset              Reset color.
# Arguments:
#   message            Message to show.
# Output:
#   Message to stderr if error and stdout for ok.
# Returns:
#   1-255 for error, 0 for ok.
#######################################
die() {
  rc="${rc:-$?}"
  for arg do
    case "${arg}" in
      -h|--help) usage "${0}" ;;
      --desc) desc "${0}" ;;
      --version) sudoers --version ;;
    esac
    exit
  done
  if [ ! "${QUIET-}" ]; then
    case "${rc}" in
      0) ok "${@:-}" ;;
      *) error "${@:-}" ;;
    esac
  fi
  exit "${rc}"
}

if [ "${0##*/}" = 'sh' ] || (return 0 2>/dev/null); then
  # sourced
  unset rc
  . color.lib 2>/dev/null || die Not in PATH: color.lib
  # shellcheck disable=SC3045
  [ ! "${BASH_VERSION-}" ] || export -f die
else
  . strict.lib 2>/dev/null || { SCRIPT_BIN="$(dirname "${0}")"; . "${SCRIPT_BIN}/strict.lib"; }
  . color.lib
fi
